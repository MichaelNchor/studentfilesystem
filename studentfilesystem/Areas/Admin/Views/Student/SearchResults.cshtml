@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@model IEnumerable<studentfilesystem.Models.Application>
@{
    ViewData["Title"] = "Search Results";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="panel-header">
    <div class="header text-center">
        <h2 class="title">Search Results</h2>
        <p class="category">Advanced Student Search Results</p>
    </div>
</div>
<div class="content">
    <div class="row">
        <div class="card">
            <div class="card-header">
                <h5 class="card-category">@Model.Count() Results found</h5>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped" id="applicants">
                        <thead class=" text-primary">
                            <tr>
                                <th>
                                    Appl ID
                                </th>
                                <th>
                                    Name
                                </th>
                                <th>
                                    Programme
                                </th>
                                <th>
                                    Status
                                </th>
                                <th class="text-right">
                                    Academic Year
                                </th>
                                <th class="text-right">
                                    Actions
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var appl in Model)
                            {
                                <tr id="@appl.ApplicationId">
                                    <td>
                                        @appl.ApplicationId
                                    </td>
                                    <td>
                                        @appl.Surname @appl.OtherNames
                                    </td>
                                    <td>
                                        @appl.Type
                                    </td>
                                    <td class="text-info">
                                        @(@appl.Status == 0 ? "Programme Selection" : (@appl.Status == 1 ? "Document Upload" : "Submitted"))
                                    </td>
                                    <td>
                                        @appl.AcademicYear
                                    </td>
                                    <td class="text-right">
                                        <a asp-area="Admin" asp-controller="Student" asp-action="StudentMenu" asp-route-id="@appl.ApplicationId" class="btn btn-round btn-info btn-icon btn-sm like"><i class="now-ui-icons users_single-02"></i></a>
                                        @*<a asp-area="Admin" asp-controller="Student" asp-action="StudentMenu" asp-route-appid="@appl.ApplicationId" class="btn btn-round btn-warning btn-icon btn-sm edit"><i class="far fa-calendar-alt"></i></a>*@
                                        <button class="btn btn-round btn-danger btn-icon btn-sm remove" id="@appl.ApplicationId"><i class="fa fa-times"></i></button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        @*</div>*@
    </div>
</div>

<script>
    (function ($) {
        "use strict";
        /*----------------------------
     counterUp js active
    ------------------------------ */
        $('.counter').counterUp({
            delay: 10,
            time: 1000
        });

        $('.remove').click(function (e) {
            e.preventDefault();
            dialogue('warning-message-and-cancel', this.id);
        })
    })(jQuery);


    function dialogue (type, id) {
    if (type == 'warning-message-and-cancel') {
        const swalWithBootstrapButtons = Swal.mixin({ confirmButtonClass: 'btn btn-primary', cancelButtonClass: 'btn btn-danger', buttonsStyling: true, })
        swalWithBootstrapButtons.fire({ title: 'Are you sure?', text: "You won't be able to revert this!", type: 'warning', showCancelButton: true, confirmButtonText: 'Confirm Delete', cancelButtonText: 'No, cancel!', reverseButtons: true })
            .then((result) => {
                if (result.value) {
                //post
                var url = 'Student/Delete/' + id;
                    console.log(url)
                    $.ajax({
                        type: 'post',
                        url: url,
                        success() {
                            $('#' + id).remove();
                            swalWithBootstrapButtons.fire('Deleted!', 'Applicant has been deleted.', 'success')
                        },
                        error() {
                            swalWithBootstrapButtons.fire('Delete Failed!', 'Applicant could not been deleted.', 'error')
                        }
                    })
            } else if (result.dismiss === Swal.DismissReason.cancel)

            { swalWithBootstrapButtons.fire('Cancelled', 'Your imaginary file is safe :)', 'error') }
        })
    }
}
</script>
